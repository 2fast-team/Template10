<Page x:ConnectionId='1' x:Class="MultiplePageHeaders.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:MultiplePageHeaders.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:MultiplePageHeaders.ViewModels"
      mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainPageViewModel x:ConnectionId='2' x:Name="ViewModel" />
    </Page.DataContext>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <controls:PageHeader x:ConnectionId='3' x:Name="pageHeader"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Text="Page Header 1">

            <!--  secondary commands  -->
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton x:ConnectionId='15'                                         Label="Settings" />
                <AppBarButton x:ConnectionId='16'                                        Label="Privacy" />
                <AppBarButton x:ConnectionId='17'                                      Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>

        <controls:PageHeader x:ConnectionId='4' x:Name="pageHeader2"
                             Background="Maroon"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.Below="pageHeader"
                             Text="Page Header 2">

            <!--  secondary commands  -->
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton x:ConnectionId='12'                                         Label="Settings" />
                <AppBarButton x:ConnectionId='13'                                        Label="Privacy" />
                <AppBarButton x:ConnectionId='14'                                      Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>
        <controls:PageHeader x:ConnectionId='5' x:Name="pageHeader3"
                             Background="Green"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.Below="pageHeader2"
                             Text="Page Header 3">

            <!--  secondary commands  -->
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton x:ConnectionId='9'                                         Label="Settings" />
                <AppBarButton x:ConnectionId='10'                                        Label="Privacy" />
                <AppBarButton x:ConnectionId='11'                                      Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>

        <TextBlock x:ConnectionId='6' x:Name="Text"
                   MaxWidth="300"
                   Margin="0,16"
                   RelativePanel.AlignHorizontalCenterWithPanel="True"
                   RelativePanel.AlignLeftWithPanel="True"
                   RelativePanel.AlignRightWithPanel="True"
                   RelativePanel.Below="pageHeader3"
                   TextWrapping="WrapWholeWords">
            The purpose of this sample is to test a NuGet 1.1.11 bug (#993) that basically
            indicates two PageHeaders cannot exist in the same view. Other than proving the fix,
            this sample won't have any value to you, a normal developer.
        </TextBlock>

        <Button x:ConnectionId='7' xmlns:b="using:Template10.Behaviors"
                x:Name="button"
                Content="Begin Test"
                RelativePanel.AlignHorizontalCenterWithPanel="True"
                RelativePanel.Below="Text">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Click">
                    <b:NavToPageAction x:ConnectionId='8'                        Page="MultiplePageHeaders.Views.ContainerPage" />
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>

        <ListView ItemsSource="{Binding Items}" RelativePanel.Below="button">
            <ListView.Header>
                <TextBlock Margin="16">
                    This is testing ObservableItemCollection eventing.
                </TextBlock>
            </ListView.Header>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <Run Text="{Binding Text}" />
                        <LineBreak />
                        <Run Text="{Binding Special}" />
                    </TextBlock>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

    </RelativePanel>

</Page>


