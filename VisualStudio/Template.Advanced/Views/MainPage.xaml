<Page
    x:Class="Sample.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="using:Template10.Behaviors"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Template10.Controls"
    controls:NavProperties.Header="This is the main page"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Sample.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:Sample.ViewModels"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d">

    <Page.Resources>
        <Style TargetType="TextBox" x:Key="ValidTextBox">
            <Setter Property="MinWidth" Value="150" />
            <Setter Property="MinHeight" Value="62" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <TextBox 
                                MinWidth="{TemplateBinding MinWidth}" 
                                MinHeight="{TemplateBinding MinHeight}"
                                Header="{TemplateBinding Header}"
                                Style="{TemplateBinding Style}"
                                Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            <Grid Height="20" Width="20" Margin="0,0,8,8"
                                  HorizontalAlignment="Right" 
                                  VerticalAlignment="Bottom">
                                <Ellipse Fill="Red" />
                                <TextBlock Text="!" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontSize="18" Padding="0,0,0,2" FontWeight="Bold" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>            
        </Style>
    </Page.Resources>

    <RelativePanel Padding="32" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <RelativePanel x:Name="EditorContainer">

            <TextBlock 
                Margin="0,0,0,8"
                x:Uid="EditorHeader"
                x:Name="EditorHeader"
                Text="Editor" 
                Style="{StaticResource HeaderTextBlockStyle}" />

            <TextBox Style="{StaticResource ValidTextBox}"
                    Margin="0,0,0,0"
                    Header="First name"
                    x:Uid="FirstNameTextBox"
                    x:Name="FirstNameTextBox"
                    RelativePanel.Below="EditorHeader"
                    Text="Test">

                <Interactivity:Interaction.Behaviors>
                    <Behaviors:KeyBehavior Event="KeyDown" Key="Enter">
                        <Core:InvokeCommandAction Command="{x:Bind ViewModel.SubmitCommand}" />
                    </Behaviors:KeyBehavior>
                    <Core:EventTriggerBehavior EventName="Loaded">
                        <Behaviors:FocusAction />
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>

            </TextBox>

            <TextBox Style="{StaticResource ValidTextBox}"
                    Margin="8,0,0,0"
                    Header="Last name"
                    x:Uid="LastNameTextBox" 
                    x:Name="LastNameTextBox" 
                    Text="{x:Bind ViewModel.Profile.LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    RelativePanel.AlignBottomWith="FirstNameTextBox"
                    RelativePanel.RightOf="FirstNameTextBox" />

            <TextBox Style="{StaticResource ValidTextBox}"
                    Margin="0,16,0,0"
                    Header="Email address"
                    x:Uid="EmailTextBox" 
                    x:Name="EmailTextBox" 
                    Text="{x:Bind ViewModel.Profile.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    RelativePanel.AlignLeftWith="FirstNameTextBox"
                    RelativePanel.AlignRightWith="LastNameTextBox"
                    RelativePanel.Below="FirstNameTextBox" />

            <TextBox Style="{StaticResource ValidTextBox}"
                    Margin="0,16,0,0"
                    Header="Web address"
                    x:Uid="WebTextBox" 
                    x:Name="WebTextBox" 
                    Text="{x:Bind ViewModel.Profile.Web, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    RelativePanel.AlignLeftWith="FirstNameTextBox"
                    RelativePanel.AlignRightWith="LastNameTextBox"
                    RelativePanel.Below="EmailTextBox" />

            <Button 
                    Margin="8,8,0,0" 
                    x:Uid="SubmitButton"
                    x:Name="SubmitButton"
                    RelativePanel.Below="WebTextBox"
                    RelativePanel.AlignRightWith="WebTextBox"
                    Command="{x:Bind ViewModel.SubmitCommand}" 
                    Content="Submit" />

            <Button 
                    Margin="0,8,0,0" 
                    x:Uid="ClearButton"
                    x:Name="ClearButton"
                    RelativePanel.LeftOf="SubmitButton"
                    RelativePanel.Below="WebTextBox"
                    Content="Clear" />

            <TextBlock
                    x:Name="stateTextBox"
                    RelativePanel.Below="WebTextBox"
                    Margin="0,16,0,0" />

        </RelativePanel>

        <!--<StackPanel x:Name="ViewersContainer" 
                    Margin="32,74,0,0" Padding="32"
                    RelativePanel.RightOf="EditorContainer">

            <StackPanel.Background>
                <SolidColorBrush Color="White" Opacity=".1" />
            </StackPanel.Background>

            <StackPanel.Resources>
                <Thickness x:Key="ViewerItemMargin">0,0,0,30</Thickness>
            </StackPanel.Resources>

            <TextBlock 
                Margin="0,-108,0,0"
                Text="Review" 
                Style="{StaticResource HeaderTextBlockStyle}" />

            <toolkit:HeaderedTextBlock
                    Margin="{StaticResource ViewerItemMargin}"
                    Text="{x:Bind ViewModel.Profile.FirstName, Mode=OneWay}"
                    Header="Name" />

            <toolkit:HeaderedTextBlock
                    Margin="{StaticResource ViewerItemMargin}"
                    Header="Email address"
                    Text="{x:Bind ViewModel.Profile.Email, Mode=OneWay}" />

            <toolkit:HeaderedTextBlock
                    Margin="{StaticResource ViewerItemMargin}"
                    Header="Web address"
                    Text="{x:Bind ViewModel.Profile.Web, Mode=OneWay}" />

        </StackPanel>-->

        <!--<VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        -->
        <!--  TODO: change properties for narrow view  -->
        <!--
                        <Setter Target="stateTextBox.Text" Value="Narrow Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        -->
        <!--  TODO: change properties for normal view  -->
        <!--
                        <Setter Target="stateTextBox.Text" Value="Normal Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        -->
        <!--  TODO: change properties for wide view  -->
        <!--
                        <Setter Target="stateTextBox.Text" Value="Wide Visual State" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>-->

    </RelativePanel>

</Page>
